"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Provides a client proxy that wraps a Service definition generated by staticly compiled Protobuf definition.
 */
class PbServiceProxy {
    /**
     * @coonstructor
     * @param conn - Connection manager to handle outbound requests
     * @param serviceName
     */
    constructor(conn, serviceName) {
        /**
         * Provides handler logic for RPC sender. Note: use of arrow function
         * required to maintain instance context.
         *
         * @param method
         * @param requestData
         * @param callback
         */
        this.sendRpcImpl = (method, requestData, callback) => {
            try {
                this.conn.send(this.serviceName, method.name, requestData, callback);
            }
            catch (e) {
                callback(e, null);
            }
        };
        /**
         * Provides handler logic for RPC sender. Note: use of arrow function
         * required to maintain instance context.
         *
         * @param method
         * @param requestData
         * @param callback
         */
        this.sendRpcImplAsync = (method, requestData, callback) => {
            try {
                this.conn.sendAsync(this.serviceName, method.name, requestData, callback);
            }
            catch (e) {
                callback(e, null);
            }
        };
        this.conn = conn;
        this.serviceName = serviceName;
    }
    /**
     *
     * @param svc Create and activate an instance of a service
     */
    activate(svc, async) {
        if (async === true) {
            return svc.create(this.sendRpcImplAsync);
        }
        else {
            // tslint:disable-line
            return svc.create(this.sendRpcImpl);
        }
    }
}
exports.PbServiceProxy = PbServiceProxy;
exports.default = PbServiceProxy;
//# sourceMappingURL=PbServiceProxy.js.map